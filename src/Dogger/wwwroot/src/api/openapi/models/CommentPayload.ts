/* tslint:disable */
/* eslint-disable */
/**
 * General
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserPayload,
    UserPayloadFromJSON,
    UserPayloadFromJSONTyped,
    UserPayloadToJSON,
} from './';

/**
 * 
 * @export
 * @interface CommentPayload
 */
export interface CommentPayload {
    /**
     * 
     * @type {number}
     * @memberof CommentPayload
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CommentPayload
     */
    authorAssociation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommentPayload
     */
    body?: string | null;
    /**
     * 
     * @type {UserPayload}
     * @memberof CommentPayload
     */
    user?: UserPayload;
}

export function CommentPayloadFromJSON(json: any): CommentPayload {
    return CommentPayloadFromJSONTyped(json, false);
}

export function CommentPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'authorAssociation': !exists(json, 'author_association') ? undefined : json['author_association'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'user': !exists(json, 'user') ? undefined : UserPayloadFromJSON(json['user']),
    };
}

export function CommentPayloadToJSON(value?: CommentPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'author_association': value.authorAssociation,
        'body': value.body,
        'user': UserPayloadToJSON(value.user),
    };
}


