/* tslint:disable */
/* eslint-disable */
/**
 * General
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserPayload,
    UserPayloadFromJSON,
    UserPayloadFromJSONTyped,
    UserPayloadToJSON,
} from './';

/**
 * 
 * @export
 * @interface RepositoryPayload
 */
export interface RepositoryPayload {
    /**
     * 
     * @type {number}
     * @memberof RepositoryPayload
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryPayload
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryPayload
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryPayload
     */
    _private?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryPayload
     */
    defaultBranch?: string | null;
    /**
     * 
     * @type {UserPayload}
     * @memberof RepositoryPayload
     */
    owner?: UserPayload;
}

export function RepositoryPayloadFromJSON(json: any): RepositoryPayload {
    return RepositoryPayloadFromJSONTyped(json, false);
}

export function RepositoryPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepositoryPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'fullName': !exists(json, 'full_name') ? undefined : json['full_name'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        '_private': !exists(json, 'private') ? undefined : json['private'],
        'defaultBranch': !exists(json, 'default_branch') ? undefined : json['default_branch'],
        'owner': !exists(json, 'owner') ? undefined : UserPayloadFromJSON(json['owner']),
    };
}

export function RepositoryPayloadToJSON(value?: RepositoryPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'full_name': value.fullName,
        'name': value.name,
        'private': value._private,
        'default_branch': value.defaultBranch,
        'owner': UserPayloadToJSON(value.owner),
    };
}


